"""Initial migration with User, Content, StudySession, PracticeSession models

Revision ID: 3c297453e3ed
Revises: 
Create Date: 2025-07-19 20:46:02.366681

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c297453e3ed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create users table
    op.create_table('users',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('email', sa.String(255), nullable=False),
        sa.Column('username', sa.String(100), nullable=False),
        sa.Column('full_name', sa.String(255), nullable=True),
        sa.Column('hashed_password', sa.String(255), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('bio', sa.Text(), nullable=True),
        sa.Column('learning_goals', sa.Text(), nullable=True),
        sa.Column('preferred_study_time', sa.String(50), nullable=True),
        sa.Column('timezone', sa.String(50), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('last_login_at', sa.DateTime(), nullable=True),
        sa.Column('allow_analytics', sa.Boolean(), nullable=False),
        sa.Column('allow_collaboration', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    
    # Create content table
    op.create_table('content',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('title', sa.String(255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('content_type', sa.String(50), nullable=False),
        sa.Column('file_path', sa.String(500), nullable=True),
        sa.Column('file_size', sa.Integer(), nullable=True),
        sa.Column('mime_type', sa.String(100), nullable=True),
        sa.Column('file_hash', sa.String(64), nullable=True),
        sa.Column('original_filename', sa.String(255), nullable=True),
        sa.Column('processing_status', sa.String(50), nullable=False),
        sa.Column('processing_error', sa.Text(), nullable=True),
        sa.Column('processing_started_at', sa.DateTime(), nullable=True),
        sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
        sa.Column('extracted_text', sa.Text(), nullable=True),
        sa.Column('summary', sa.Text(), nullable=True),
        sa.Column('key_concepts', sa.JSON(), nullable=True),
        sa.Column('content_metadata', sa.JSON(), nullable=True),
        sa.Column('embedding_id', sa.String(100), nullable=True),
        sa.Column('embedding_model', sa.String(50), nullable=True),
        sa.Column('embeddings_generated', sa.Integer(), nullable=False),
        sa.Column('subject', sa.String(100), nullable=True),
        sa.Column('tags', sa.JSON(), nullable=True),
        sa.Column('view_count', sa.Integer(), nullable=False),
        sa.Column('study_time_minutes', sa.Float(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    )
    
    # Create study_sessions table
    op.create_table('study_sessions',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('title', sa.String(255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('study_mode', sa.String(10), nullable=False),
        sa.Column('status', sa.String(11), nullable=False),
        sa.Column('scheduled_start', sa.DateTime(), nullable=True),
        sa.Column('scheduled_end', sa.DateTime(), nullable=True),
        sa.Column('actual_start', sa.DateTime(), nullable=True),
        sa.Column('actual_end', sa.DateTime(), nullable=True),
        sa.Column('duration_minutes', sa.Integer(), nullable=False),
        sa.Column('learning_objectives', sa.JSON(), nullable=True),
        sa.Column('target_concepts', sa.JSON(), nullable=True),
        sa.Column('agent_interactions', sa.JSON(), nullable=True),
        sa.Column('personalization_params', sa.JSON(), nullable=True),
        sa.Column('progress_percentage', sa.Float(), nullable=False),
        sa.Column('concepts_mastered', sa.JSON(), nullable=True),
        sa.Column('areas_for_improvement', sa.JSON(), nullable=True),
        sa.Column('focus_score', sa.Float(), nullable=True),
        sa.Column('comprehension_score', sa.Float(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('is_collaborative', sa.Boolean(), nullable=False),
        sa.Column('collaborator_ids', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    )
    
    # Create problems table
    op.create_table('problems',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('question', sa.Text(), nullable=False),
        sa.Column('problem_type', sa.String(15), nullable=False),
        sa.Column('options', sa.JSON(), nullable=True),
        sa.Column('correct_answer', sa.Text(), nullable=True),
        sa.Column('explanation', sa.Text(), nullable=True),
        sa.Column('subject', sa.String(100), nullable=True),
        sa.Column('topic', sa.String(100), nullable=True),
        sa.Column('subtopic', sa.String(100), nullable=True),
        sa.Column('difficulty_level', sa.String(8), nullable=False),
        sa.Column('source_content_id', sa.UUID(), nullable=True),
        sa.Column('generated_by_model', sa.String(50), nullable=True),
        sa.Column('times_used', sa.Integer(), nullable=False),
        sa.Column('average_score', sa.Float(), nullable=True),
        sa.Column('average_time_seconds', sa.Integer(), nullable=True),
        sa.Column('quality_score', sa.Float(), nullable=True),
        sa.Column('flagged_count', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create practice_sessions table
    op.create_table('practice_sessions',
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('study_session_id', sa.UUID(), nullable=True),
        sa.Column('title', sa.String(255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('subject', sa.String(100), nullable=True),
        sa.Column('topic', sa.String(100), nullable=True),
        sa.Column('problems', sa.JSON(), nullable=False),
        sa.Column('problem_count', sa.Integer(), nullable=False),
        sa.Column('started_at', sa.DateTime(), nullable=True),
        sa.Column('completed_at', sa.DateTime(), nullable=True),
        sa.Column('time_limit_minutes', sa.Integer(), nullable=True),
        sa.Column('actual_duration_minutes', sa.Integer(), nullable=False),
        sa.Column('score', sa.Float(), nullable=True),
        sa.Column('correct_answers', sa.Integer(), nullable=False),
        sa.Column('incorrect_answers', sa.Integer(), nullable=False),
        sa.Column('skipped_answers', sa.Integer(), nullable=False),
        sa.Column('difficulty_level', sa.String(8), nullable=False),
        sa.Column('adaptive_adjustments', sa.JSON(), nullable=True),
        sa.Column('generation_params', sa.JSON(), nullable=True),
        sa.Column('generation_model', sa.String(50), nullable=True),
        sa.Column('problem_results', sa.JSON(), nullable=True),
        sa.Column('strengths', sa.JSON(), nullable=True),
        sa.Column('weaknesses', sa.JSON(), nullable=True),
        sa.Column('recommendations', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['study_session_id'], ['study_sessions.id'], ),
    )
    
    # Create study_session_content association table
    op.create_table('study_session_content',
        sa.Column('study_session_id', sa.UUID(), nullable=False),
        sa.Column('content_id', sa.UUID(), nullable=False),
        sa.Column('added_at', sa.DateTime(), nullable=True),
        sa.Column('time_spent_minutes', sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint('study_session_id', 'content_id'),
        sa.ForeignKeyConstraint(['study_session_id'], ['study_sessions.id'], ),
        sa.ForeignKeyConstraint(['content_id'], ['content.id'], ),
    )
    
    # Create indexes
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_content_user_id'), 'content', ['user_id'], unique=False)
    op.create_index(op.f('ix_study_sessions_user_id'), 'study_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_practice_sessions_user_id'), 'practice_sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_practice_sessions_user_id'), table_name='practice_sessions')
    op.drop_index(op.f('ix_study_sessions_user_id'), table_name='study_sessions')
    op.drop_index(op.f('ix_content_user_id'), table_name='content')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    
    op.drop_table('study_session_content')
    op.drop_table('practice_sessions')
    op.drop_table('problems')
    op.drop_table('study_sessions')
    op.drop_table('content')
    op.drop_table('users')
    # ### end Alembic commands ###